#!/usr/bin/env python3
"""
Cowrie Configuration Optimizer
Generates optimized cowrie.cfg with all best practices
"""

def generate_optimized_cowrie_config():
    """Generate production-grade cowrie.cfg"""
    
    config = """# Cowrie Configuration - Full Stack Optimized
# Generated by Full Stack Optimizer

[honeypot]
# Hostname and system identity
hostname = web-server-prod
log_path = /opt/cowrie/var/log/cowrie
download_path = /opt/cowrie/var/lib/cowrie/downloads
contents_path = /opt/cowrie/honeyfs
txtcmds_path = /opt/cowrie/txtcmds
data_path = /opt/cowrie/var/lib/cowrie
filesystem_file = /opt/cowrie/share/cowrie/fs.pickle

# Authentication settings
auth_class = UserDB
userdb_file = /opt/cowrie/etc/userdb.txt
auth_none_enabled = false

# Session settings
interact_enabled = true
backend = shell
shell = /bin/bash

# File system settings
filesystem = pickle
arch = linux-x64-lsb

# Process simulation
kernel_version = 5.4.0-150-generic
kernel_build_string = #167-Ubuntu SMP Mon May 15 17:35:05 UTC 2023
hardware_platform = x86_64
operating_system = GNU/Linux

[ssh]
# SSH server configuration
enabled = true
rsa_public_key = /opt/cowrie/etc/ssh_host_rsa_key.pub
rsa_private_key = /opt/cowrie/etc/ssh_host_rsa_key
dsa_public_key = /opt/cowrie/etc/ssh_host_dsa_key.pub
dsa_private_key = /opt/cowrie/etc/ssh_host_dsa_key
version = SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4
listen_endpoints = tcp:2222:interface=0.0.0.0
sftp_enabled = true
forwarding = true
forward_redirect = false

# Modern SSH algorithms (non-default)
kex = curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256

ciphers = chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

macs = umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512

compression = none,zlib@openssh.com

[telnet]
# Telnet disabled for production realism
enabled = false

[backend_pool]
# Backend pool for performance
pool_only = false
pool_max_vms = 5
vm_max_lifetime = 3600
vm_unused_timeout = 600
vm_dirty_timeout = 1800
share_guests = true
guest_image_path = /opt/cowrie/share/cowrie/ubuntu-18.04-minimal.qcow2
guest_hypervisor = qemu
guest_qemu_machine = pc-i440fx-2.0
guest_kernel_image = /opt/cowrie/share/cowrie/vmlinuz
guest_kernel_cmdline = init=/sbin/init root=/dev/hda1 rw quiet
listen_endpoints = tcp:6415:interface=127.0.0.1
save_snapshots = true
snapshot_path = /opt/cowrie/var/lib/cowrie/snapshots

[proxy]
# Proxy settings for advanced deception
backend = simple
backend_ssh_host = localhost
backend_ssh_port = 22
backend_user = root
backend_pass = root
pool = pool_only
pool_max_vms = 2
pool_vm_unused_timeout = 600

[output_jsonlog]
# JSON logging for analysis
logfile = /opt/cowrie/var/log/cowrie/cowrie.json
epoch_timestamp = true

[output_mysql]
# MySQL logging (optional)
enabled = false
host = localhost
database = cowrie
username = cowrie
password = cowrie_password
port = 3306
debug = false

[output_elasticsearch]
# Elasticsearch integration
enabled = false
host = localhost
port = 9200
index = cowrie

[output_splunk]
# Splunk integration
enabled = false
url = https://localhost:8088/services/collector/event
token = your-splunk-token
index = cowrie
sourcetype = cowrie

[output_hpfeeds]
# HPFeeds for threat sharing
enabled = false
server = hpfeeds.example.com
port = 10000
identifier = cowrie
secret = your-secret

[output_virustotal]
# VirusTotal integration for malware analysis
enabled = false
api_key = your-virustotal-api-key
upload = true
debug = false

[output_cuckoo]
# Cuckoo Sandbox integration
enabled = false
url_base = http://localhost:8090
user = cuckoo
passwd = cuckoo

[output_csirtg]
# CSIRT Gadgets integration
enabled = false
username = your-username
feed = your-feed
description = Cowrie Honeypot
tags = honeypot,ssh

[output_dshield]
# DShield integration
enabled = false
userid = your-userid
auth_key = your-auth-key
batch_size = 100

[output_localsyslog]
# Local syslog output
enabled = true
facility = USER
format = cowrie: %(message)s

[output_textlog]
# Text log output
enabled = true
logfile = /opt/cowrie/var/log/cowrie/cowrie.log

[output_graylog]
# Graylog integration
enabled = false
url = http://localhost:12201/gelf

[output_influxdb]
# InfluxDB metrics
enabled = false
host = localhost
port = 8086
database_name = cowrie
retention_policy_duration = 12w

[output_kafka]
# Kafka streaming
enabled = false
host = localhost
port = 9092
topic = cowrie

[output_redis]
# Redis pub/sub
enabled = false
host = localhost
port = 6379
db = 0

[output_s3]
# AWS S3 storage
enabled = false
access_key_id = your-access-key
secret_access_key = your-secret-key
bucket = your-bucket
region = us-east-1

[output_slack]
# Slack notifications
enabled = false
webhook = your-webhook-url
channel = #security

[output_socketlog]
# Socket logging
enabled = false
address = 127.0.0.1
port = 9000

[output_syslog]
# Syslog output
enabled = false
host = localhost
port = 514
facility = 16
priority = 6

[output_telegram]
# Telegram notifications
enabled = false
bot_token = your-bot-token
chat_id = your-chat-id

[output_misp]
# MISP threat sharing
enabled = false
base_url = https://your-misp-instance
api_key = your-api-key
verify_cert = true

# File system simulation
[fs]
# File system pickle settings
pickle_file = /opt/cowrie/share/cowrie/fs.pickle
contents_path = /opt/cowrie/honeyfs

# Process simulation
[process]
# Process list simulation
enabled = true
fake_processes = /opt/cowrie/etc/fake_processes.txt

# Network simulation
[network]
# Network interface simulation
enabled = true
listen_addr = 0.0.0.0
public_addr = auto

# Performance tuning
[performance]
# Connection limits
max_connections = 100
connection_timeout = 300
max_processes = 20
process_timeout = 1800

# Memory management
memory_limit = 512M
gc_threshold = 1000

# Logging performance
log_buffer_size = 8192
log_flush_interval = 5

# Security settings
[security]
# Isolation settings
chroot_enabled = true
user_isolation = true
network_isolation = true

# Rate limiting
rate_limit_enabled = true
rate_limit_max_connections = 10
rate_limit_window = 60

# Intrusion detection
ids_enabled = true
ids_threshold = 5
ids_window = 300

# Data retention
log_retention_days = 90
session_retention_days = 30
download_retention_days = 60
"""
    
    return config

if __name__ == "__main__":
    config = generate_optimized_cowrie_config()
    
    with open("/tmp/cowrie_optimized.cfg", "w") as f:
        f.write(config)
    
    print("‚úÖ Optimized cowrie.cfg generated")
    print("üìÅ Location: /tmp/cowrie_optimized.cfg")
    print("üìä Features: Modern SSH, comprehensive logging, performance tuning")